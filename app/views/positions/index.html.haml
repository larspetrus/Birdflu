%h5{style: 'position: absolute; top:0; right:0; '}
  = link_to "H codes", "http://www.ai.univ-paris8.fr/~bh/cube/solutions_tout.html"

.welcome
  %p
    Welcome to the poorly implemented,
    way pre-alpha LL AlgNotDB (aka "#{@joke_header}")!
  %p
    Narrow the search by selecting corner/edge
    configurations (COP, EO, EP, OLL) to the right. Clicking the weird
    code in the Position column brings up
    a page for that position.

%table.center
  %tr
    %th COP
    %th EO
    %th EP
    %th OLL
  %tr#pickers
    %td
      -##cop-selected= render 'll_icon', pos: @cop_selected, add_class: 'selected'
      #cop-selected= render 'svg_cube', iconf: @cop_selected, size: 44, add_class: 'selected'
      #cop-picker
        %table.icon-grid
          - @cop_rows.each do |cl_row|
            %tr
              - cl_row.each do |cl|
                %td.icon-grid
                  -#= render 'll_icon', pos: cl, add_class: cl.highlight(params[:cl]) if cl
                  = render 'svg_cube', iconf: cl, size: 44, add_class: cl.highlight(params[:cl]) if cl
    %td
      -##eo-selected= render 'll_icon', pos: @eo_selected, add_class: 'selected'
      #eo-selected= render 'svg_cube', iconf: @eo_selected, size: 44, add_class: 'selected'
      #eo-picker
        %table.icon-grid-h
          - @eo_rows.each do |eo_row|
            %tr
              - eo_row.each do |eo|
                %td.icon-grid-h
                  = render 'll_icon', pos: eo, add_class: eo.highlight(params[:eo]) if eo
    %td
      -##ep-selected= render 'll_icon', pos: @ep_selected, add_class: 'selected'
      #ep-selected= render 'svg_cube', iconf: @ep_selected, size: 44, add_class: 'selected'
      #ep-picker
        %table.icon-grid-h
          - @ep_rows.each do |ep_row|
            %tr
              - ep_row.each do |ep|
                %td.icon-grid-h
                  -#= render 'll_icon', pos: ep, add_class: ep.highlight(params[:ep]) if ep
                  = render 'svg_cube', iconf: ep, size: 44, add_class: ep.highlight(params[:ep]) if ep
    %td
      -##oll-selected= render 'll_icon', pos: @oll_selected, add_class: 'selected'
      #oll-selected= render 'svg_cube', iconf: @oll_selected, size: 44, add_class: 'selected'
      #oll-picker
        %table.icon-grid-h
          - @oll_rows.each do |oll_row|
            %tr
              - oll_row.each do |oll|
                %td.icon-grid-h
                  = render 'll_icon', pos: oll, add_class: oll.highlight(params[:ol]) if oll

%br{clear: 'both'}



=form_tag url_for(controller: "positions", action: "index"), method: 'get' do
  =hidden_field_tag(:ol, @db_query['oll'])
  =hidden_field_tag(:cl, @db_query['corner_look'])
  =hidden_field_tag(:eo, @db_query['edge_orientations'])
  =hidden_field_tag(:ep, @db_query['edge_positions'])
  -#%div
  -#  =label_tag(:cp, "Swapped corners")
  -#  =select_tag(:cp, options_for_select(["None", "Adjacent", "Diagonal"], @cp_param), include_blank: true)
  -#%div
  -#  =label_tag(:im, "Show Mirrors")
  -#  =select_tag(:im, options_for_select(["No", "Yes"], @show_mirrors))


%h4
  Selected #{@position_count} of the #{Position.count} LL positions.
  - if @position_count != @positions.count
    Showing first #{@positions.count}
%h5 Average best solve: #{@average}

%table.index
  %th Position
  %th Mirror Pos
  %th COP
  %th EO
  %th EP
  %th OLL
  %th Solutions
  %th Best Solution
  %th Moves
  %th Name

  - @positions.each do |pos|
    - cache([pos.ll_code, pos.alg_count], skip_digest: true) do
      - best = pos.best_alg || OpenStruct.new
      %tr
        %td= link_to pos.ll_code, "positions/#{pos.ll_code}"
        %td= link_to pos.mirror_ll_code, "positions/#{pos.mirror_ll_code}" if pos.ll_code != pos.mirror_ll_code
        %td= render 'svg_cube', iconf: CopIcons.for(pos), size: 25, no_name: true
        %td= render 'svg_cube', iconf: EoIcons.for(pos),  size: 25, no_name: true
        %td= render 'svg_cube', iconf: EpIcons.for(pos),  size: 25, no_name: true
        %td= render 'svg_cube', iconf: OllIcons.for(pos), size: 25, no_name: true
        %td.num= pos.alg_count
        %td
          =best.mv_start
          %span.cancel1= best.mv_cancel1
          %span.merged=  best.mv_merged
          %span.cancel2= best.mv_cancel2
          %span.alg2=    best.mv_end
        %td.num= best.length
        %td{:class => best.oneAlg? ? 'one-alg' : ''}= best.name

:javascript
  $('.ll-icon, .svg-icon').on('click', function() {
    var field = $(this).data('field');
    if (field === '#cl' || field === '#ol') {
      $('#eo, #ep').val('');
    }
    $(field).val($(this).data('code'));
    $('form').submit();
  });

  function opts(specifics, field) {
  var bind_closer = function(){ $('.ui-widget-overlay').bind('click',function(){ $(field+'-picker').dialog('close'); })};
  var pos = { my: 'center top', at: 'center top', of: '#pickers' };
    return $.extend(specifics, {resizable: false, modal: true, position: pos, open: bind_closer});
  }
  $('#oll-selected').on('mouseover', function() {
    $('#oll-picker').dialog(opts({ width: '580px', title: 'Corner and edge orientation (OLL)'}, '#oll'));
  });
  $('#cop-selected').on('mouseover', function() {
    $('#cop-picker').dialog(opts({ width: '460px', title: 'Corner orientation and position (COP)'}, '#cop'));
  });
  $('#eo-selected').on('mouseover', function() {
    $('#eo-picker').dialog(opts({ width: '479px', title: 'Edge orientation (EO)'}, '#eo'));
  });
  $('#ep-selected').on('mouseover', function() {
    $('#ep-picker').dialog(opts({ width: '562px', title: 'Edge position (EP)'}, '#ep'));
  });
