.leftmenu= link_to 'Random Position', "positions/#{Position.random_id}"
= render 'find_by_alg'

%hr{style: 'clear:both;'}

.left_side_stats
  %span#headline= @page_stats.headline
  %table
    - @page_stats.sections[0].each do |line|
      %tr
        %td= line.label
        %td{class: line.class_name}= line.text
    %tr.spacer
    - @page_stats.sections[1].each do |line|
      %tr
        %td= line.label
        %td{class: line.class_name}= line.text
  - if @page_stats.link_section
    .spacer
    - @page_stats.link_section.each do |link|
      .link= link

%div{style: 'position: absolute; top:4px; right:4px; font-size: 8px; color: #888;'}
  Cache #{number_to_human_size Rails.cache.instance_variable_get('@cache_size')}

%table.center
  %tr
    %th COP
    %th OLL
    %th
    %th CO
    %th CP
    %th EO
    %th EP
  %tr#pickers
    = render 'picker_td', prop: :cop, add_class: 'grid-lines'
    = render 'picker_td', prop: :oll, add_class: 'grid-lines'
    %td{style: 'border-right: solid 1px #bbb;'}
    = render 'picker_td', prop: :co
    = render 'picker_td', prop: :cp
    = render 'picker_td', prop: :eo
    = render 'picker_td', prop: :ep,  add_class: 'relative', ubl_text: true

-if @single_position
  .right{style: "width: 180px; position: absolute; top:40px; right:0px;"}
    = render 'svg_cube', icon: Icons::Big.new(@single_position), size: 160, label: '', add_class: 'big-icon'


=form_tag url_for(controller: "positions", action: "index"), method: 'post', id: 'icon-picker' do
  =hidden_field_tag(:cop, @filters[:cop])
  =hidden_field_tag(:oll, @filters[:oll])
  =hidden_field_tag(:co,  @filters[:co])
  =hidden_field_tag(:cp,  @filters[:cp])
  =hidden_field_tag(:eo,  @filters[:eo])
  =hidden_field_tag(:ep,  @filters[:ep])
  =hidden_field_tag(:clicked, 'fail')

- unless @single_position
  .center.page-format-header
    =form_tag url_for(controller: "positions", action: "index"), method: 'post', id: 'page_format_form' do
      Show as
      =select_tag("page_format", options_for_select(['positions', 'algs'], selected: @page_format))

- if @page_format == 'algs'

  .center.alg-list-header{style: "border-top: 1px solid #aaa; padding-top: 8px;"}
    =form_tag url_for(controller: "positions", action: "index"), method: 'get', id: 'algs_options' do
      Show first
      =select_tag("page", options_for_select([25, 50, 100, 200, 500], selected: @page))

      =hidden_field_tag(:algtypes, @algtypes)
      algs

      .right
        Sort by
        =select_tag("sortby", options_for_select(['speed', ['moves', 'length']], selected: @sortby))


  %table.alg-list
    - @columns.each do |column|
      %th= column.header
    - @raw_algs.each do |alg|
      - flags = {shortest: alg.length == @aggregate_stats.shortest, fastest: alg.speed == @aggregate_stats.fastest}
      %tr
        - @columns.each do |column|
          - if column.is_svg
            %td= render 'svg_cube', column.svg_locals.call(alg)
          -else
            =column.td(alg, flags)
- else
  %table.pos-list
    - @columns.each do |column|
      %th= column.header

    - @positions.each do |pos|
      %tr
        - @columns.each do |column|
          - if column.is_svg
            %td= render 'svg_cube', column.svg_locals.call(pos)
          -else
            =column.td(pos, {})

#show-alg{style: 'height:200px; width:200px;'}
%script ROOFPIG_CONF_AD = "solved=U-| hover=3 | speed=600"

:javascript
  $('.svg-icon, .random, .unselect').on('click', function() {
    var field = $(this).data('field');

    $(field).val($(this).data('code'));
    $('#clicked').val(field);
    $('form#icon-picker').submit();
  });

  // --------- Open/Close picker dialogs ---
  var mouse_is_inside_picker = '';

  var picker_dialog_props = {
    cop: opts({ width: '400px', title: 'Corner orientation & position (COP)'}),
    oll: opts({ width: '404px', title: 'Corner and edge orientation (OLL)'}),
    co:  opts({ width: '394px', title: 'Corner orientation (CO)'}),
    cp:  opts({ width: '308px', title: 'Corner position (CP)'}),
    eo:  opts({ width: '394px', title: 'Edge orientation (EO)'}),
    ep:  opts({ width: '572px', title: 'Edge position (EP)'}),
  };
  function opts(specifics) {
    var pos = { my: 'center top', at: 'center bottom', of: '#pickers' };
    return $.extend(specifics, {resizable: false, modal: false, draggable: false, position: pos, dialogClass: "picker-dialog"});
  };

  $('.selected-icon').hover(
    function(event){
      var field = $(event.currentTarget).attr('data-prop');
      var picker = $('#'+field+'-picker').dialog(picker_dialog_props[field]);
      picker.parent().attr('data-dialog-field', field)
    },
    function(event){
      var field = $(event.currentTarget).attr('data-prop');
      setTimeout(function(){
        if (mouse_is_inside_picker != field) { $('#'+field+'-picker').dialog('close'); }
      }, 100);
    }
  );

  $(document).on({
    mouseenter: function(event) {
      mouse_is_inside_picker = $(event.currentTarget).attr('data-dialog-field')
    },
    mouseleave: function(event) {
      var field = $(event.currentTarget).attr('data-dialog-field')
      $('#'+field+'-picker').dialog('close');
      mouse_is_inside_picker = ''
    }
  }, ".picker-dialog");

  // --------- Show Roofpigs ---
  $(document).on('click', '.alg-list .show-pig', function(e) {
    var td = $(event.target).parent()
    var alg = td.prev().text()
    var title = td.siblings().eq(2).text()

    roofpig_dialog(title, alg, td.data("us"))
  });

  $(document).on('click', '.pos-list .show-pig', function(e) {
    var td = $(event.target).parent();
    var alg = td.prev().text();
    var title = td.siblings().eq(0).text() + ' shortest';

    roofpig_dialog(title, alg, td.data("us"))
  });

  // ---- page format form
  $('#page_format').change(function() {
    $('form#page_format_form').submit();
  });

  // ---- alg list form
  $('#page, #sortby, #algtypes').change(function() {
    $('form#algs_options').submit();
  });
