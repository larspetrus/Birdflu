:javascript
  history.replaceState('', '', '#{@bookmark_url}');

= render 'leftbar', page: ApplicationController::MAIN_NAME

.rightbar
  -if @only_position
    = render 'cube_icon', icon: Icons::Big.new(@only_position), pad: true, label: ''
  .stats-box{class: @only_position ? '' : 'positions-stats'}
    %span#headline= @stats.headline
    - if @only_position
      %span#headline_prot
    -if @pos_name
      .nickname
        =@pos_name
    %table
      - @stats.sections[0].each do |line|
        %tr
          %td= line.label
          %td{class: line.class_name}= line.text
      %tr.spacer
      - @stats.sections[1].each do |line|
        %tr
          %td= line.label
          %td{class: line.class_name}= line.text
    - if @stats.link_section
      .spacer
      - @stats.link_section.each do |link_line|
        %div
          = link_line[:label]
          - link_line[:links].each do |one_link|
            .link= one_link
    -if @setup_alg
      .spacer
      .setupalg
        Setup:
        %span
          -alg_sections(@setup_alg).each do |section|
            =section

= render 'pickers'

= render 'page_rotation'

=form_tag url_for(controller: "positions", action: "index"), method: 'get', id: 'main-form', enforce_utf8: false do
  =hidden_field_tag(:pos, @filters.pos_code)
  =hidden_field_tag(:poschange)
  =hidden_field_tag(:udf)

  .page-controls
    - unless @only_position
      .center.page-format-header
        Show as
        =Fields::LIST.as_tag(@list_format)
    - else
      =Fields::LIST.as_hidden_field(@list_format)

  - if @algs_mode
    .center.algs-list-header
      Show first
      =Fields::LINES.as_tag(@list_format)
      algs

      .right
        Sort by
        =Fields::SORTBY.as_tag(@list_format)

%table{class: @list_classes}
  - @columns.each do |column|
    %th= column.header
  - @list_items.each do |item|
    - line_presenter = item.presenter(@table_context)
    %tr{class: item.matches(@hi_lite_id) ? 'hilite' : line_presenter.css}
      - @columns.each do |column|
        =list_td(line_presenter, column)
  -if @clipped
    %tfoot
      %tr
        %td{colspan: 99}
          showing #{@clipped[:shown]} of #{@clipped[:total]} positions

#show-alg{style: 'height:200px; width:200px;'}

#star-picker{style: 'display: none;'}
  -if @login
    .star1
    .star2
    .star3
    .star4
  -else
    Log in to star algs.

#cstar-picker{style: 'display: none;'}
  -if @login
    .cstar1
    .cstar2
    .cstar3
    .cstar4
  -else
    Log in to star algs.
=form_tag url_for(controller: 'galaxies', action: 'update_star'), method: 'post', id: 'star_form', remote: true do
  =hidden_field_tag(:starred_id)
  =hidden_field_tag(:star_class)


:javascript
  $('.pick-icon, .random, .unselect').on('click', function() {
    $('#poschange').val($(this).data('field').replace('#','') + '-' + $(this).data('code'));
    send_form(false);
  });

  $('#{Fields::JQ_SELECTOR}').change(function() {
    $('#poschange').prop('disabled', true);
    send_form(true);
  });

  $('.js-goto-post').on('click', function(e) {
    window.location.href = '/positions/' + $(event.target).text() + '?hl_name=' + $(event.target).text();
  });

  function send_form(new_prefs) {
    var all_defaults = true;
    var field_defaults = #{Fields::JS_DEFAULTS};

    for (var prop in field_defaults) {
      var elm = $('#'+prop);
      if (elm.val() === field_defaults[prop]) {
        elm.prop('disabled', true);
      } else {
        if (elm.val()) {
          all_defaults = false
        }
      }
    }

    if (!(new_prefs && all_defaults)) {
      $('#udf').prop('disabled', true); // Posted (only) when the user has *chosen* all default values
    }

    $('form#main-form').submit();
  }

  // ☆★☆★☆★☆★ Star code: ☆★☆★☆★☆★☆★

  var star_alg = null;
  var open_dialog = null;

  $('.stars_td').on('click', function() {
    show_star_dialog($(this), $('#star-picker'), 'star')
  });
  $('.cstars_td').on('click', function() {
    show_star_dialog($(this), $('#cstar-picker'), 'cstar')
  });

  function show_star_dialog(td, dialog, prefix) {
    star_alg = {id: td.data('aid'), prefix: prefix};
    dialog.children().text('');

    if (td.data('deletable')) {
      var deletable_stars = String(td.data('deletable')).split(' ');
      for (var i = 0; i < deletable_stars.length; i++) {
        $(dialog.children().get(deletable_stars[i] - 1)).text('▘')
      }
    }
    dialog.dialog({
      position: { my: 'center top', at: 'center top', of: td },
      width: 92,
      height: 40,
      modal: true,
      closeOnEscape: true,
      dialogClass: 'stars-dialog',
    });
    open_dialog = dialog;
  }

  $(document).on({
    mouseleave: function(event) {
      open_dialog.dialog('close');
      open_dialog = null;
    }
  }, ".stars-dialog");

  $('#star-picker div, #cstar-picker div').on('click', function() {
    open_dialog.dialog('close');

    $('#starred_id').val(star_alg.id);
    $('#star_class').val(this.className);
    $('#star_form').submit();
  });
  $('#star_form').on('ajax:success', function(e, data, status, xhr) {
    var td = $("td[data-aid='"+star_alg.id+"']");

    td.empty();
    var active_stars = JSON.parse(xhr.responseText);
    td.data('deletable', active_stars.join(' '));
    for (var i = 0; i < active_stars.length; i++) {
      td.append("<span class="+star_alg.prefix+active_stars[i]+"></span>")
    }
  });
