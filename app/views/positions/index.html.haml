:javascript
  history.replaceState('', '', '#{@bookmark_url}');

= render 'leftbar', page: ApplicationController::MAIN_NAME

.rightbar
  -if @only_position
    = render 'cube_icon', icon: Icons::Big.new(@only_position), pad: true, label: ''
  .stats-box{class: @only_position ? '' : 'positions-stats'}
    %span#headline= @stats.headline
    - if @only_position
      %span#headline_prot
    -if @pos_name
      .nickname
        =@pos_name
    %table
      - @stats.sections[0].each do |line|
        %tr
          %td= line.label
          %td{class: line.class_name}= line.text
      %tr.spacer
      - @stats.sections[1].each do |line|
        %tr
          %td= line.label
          %td{class: line.class_name}= line.text
    - if @stats.link_section
      .spacer
      - @stats.link_section.each do |link_line|
        %div
          = link_line[:label]
          - link_line[:links].each do |one_link|
            .link= one_link
    -if @setup_alg
      .spacer
      .setupalg
        Setup:
        %span
          -alg_sections(@setup_alg).each do |section|
            =section

%table.center
  %tr
    - [:COP, :OLL, '', :CO, :CP, :EO, :EP].each do |header|
      %th= header
  %tr#pickers
    = render 'picker_td', prop: :cop, add_class: 'grid-lines'
    = render 'picker_td', prop: :oll, add_class: 'grid-lines', message: @position_set == 'eo' ? 'Locked to oriented edges.' : nil
    %td{style: 'border-right: solid 1px #bbb;'}
    = render 'picker_td', prop: :co
    = render 'picker_td', prop: :cp
    = render 'picker_td', prop: :eo
    = render 'picker_td', prop: :ep,  add_class: 'relative', message: 'Images assume the darker corner is placed correctly.'

= render 'page_rotation'

=form_tag url_for(controller: "positions", action: "index"), method: 'get', id: 'main-form', enforce_utf8: false do
  =hidden_field_tag(:pos, @filters.pos_code)
  =hidden_field_tag(:poschange)
  =hidden_field_tag(:udf)

  .page-controls
    - unless @only_position
      .center.page-format-header
        Show as
        =Fields::LIST.as_tag(@list_format)
    - else
      =hidden_field_tag(Fields::LIST.name, Fields::LIST.value(@list_format))

  - if @algs_mode
    .center.algs-list-header
      Show first
      =Fields::LINES.as_tag(@list_format)
      algs

      .right
        Sort by
        =Fields::SORTBY.as_tag(@list_format)

%table{class: @list_classes}
  - @columns.each do |column|
    %th= column.header
  - @list_items.each do |item|
    - line_presenter = item.presenter(@table_context)
    %tr{class: item.matches(@hi_lite) ? 'hilite' : ''}
      - @columns.each do |column|
        - if column.is_svg
          - svg_params = column.svg_params(line_presenter)
          - if svg_params
            %td= render 'cube_icon', svg_params
          - else
            %td
        -else
          =column.cell(line_presenter)
  -if @clipped
    %tfoot
      %tr
        %td{colspan: 99}
          showing #{@clipped[:shown]} of #{@clipped[:total]} positions

#show-alg{style: 'height:200px; width:200px;'}

#star-picker{style: 'display: none;'}
  -if @login
    .star1
    .star2
    .star3
    .star4
  -else
    Log in to star algs.
=form_tag url_for(controller: 'galaxies', action: 'update_star'), method: 'post', id: 'star_form', remote: true do
  =hidden_field_tag(:rawalg_id)
  =hidden_field_tag(:star_class)


:javascript
  $('.pick-icon, .random, .unselect').on('click', function() {
    $('#poschange').val($(this).data('field').replace('#','') + '-' + $(this).data('code'));
    send_form(false);
  });

  $('#{Fields::JQ_SELECTOR}').change(function() {
    $('#poschange').prop('disabled', true);
    send_form(true);
  });

  $('.js-goto-post').on('click', function(e) {
    window.location.href = '/positions/' + $(event.target).text() + '?hl_name=' + $(event.target).text();
  });

  function send_form(new_prefs) {
    var all_defaults = true;
    var field_defaults = #{Fields::JS_DEFAULTS};

    for (var prop in field_defaults) {
      var elm = $('#'+prop);
      if (elm.val() === field_defaults[prop]) {
        elm.prop('disabled', true);
      } else {
        if (elm.val()) {
          all_defaults = false
        }
      }
    }

    if (!(new_prefs && all_defaults)) {
      $('#udf').prop('disabled', true); // Posted (only) when the user has *chosen* all default values
    }

    $('form#main-form').submit();
  }

  // ☆★☆★☆★☆★ Star code: ☆★☆★☆★☆★☆★

  var star_alg_id = null;
  $('.stars_td').on('click', function() { // Open star picker dialog
    star_alg_id = $(this).data('aid');
    var deletable_stars = ($(this).data('deletable') ? String($(this).data('deletable')).split(' ') : []);

    $('#star-picker').children().text('');
    for (var i of deletable_stars) {
      $($('#star-picker').children().get(i - 1)).text('▘')
    }

    $('#star-picker').dialog({
      position: { my: 'center top', at: 'center top', of: this },
      width: 92,
      height: 40,
      modal: true,
      closeOnEscape: true,
      dialogClass: 'stars-dialog',
    });
  });

  $(document).on({
    mouseleave: function(event) {
      $('#star-picker').dialog('close');
    }
  }, ".stars-dialog");

  $('#star-picker .star1, #star-picker .star2, #star-picker .star3, #star-picker .star4').on('click', function() {
    var clicked = this.className;
    $('#star-picker').dialog('close');
    $('#rawalg_id').val(star_alg_id);
    $('#star_class').val(clicked);
    $('#star_form').submit();
  });
  $('#star_form').on('ajax:success', function(e, data, status, xhr) {
    var td = $("td[data-aid='"+star_alg_id+"']");

    td.empty();
    var active_stars = JSON.parse(xhr.responseText);
    td.data('deletable', active_stars.join(' '));
    for (var i = 0; i < active_stars.length; i++) {
      td.append("<span class=star"+active_stars[i]+"></span>")
    }
  });
