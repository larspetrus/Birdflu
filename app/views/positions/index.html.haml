%h1 Grail Moth

%table
  %tr
    %th COP
    %th EO
    %th EP
    %th OLL
  %tr
    %td
      #cop-selected
        = render 'll_icon', pos: @cop_selected, add_class: 'selected'
      #cop-picker
        %h4 Corner orientation and position (COP)
        %table.icon-grid
          - @cop_rows.each do |cl_row|
            %tr
              - cl_row.each do |cl|
                %td.icon-grid
                  = render 'll_icon', pos: cl, add_class: cl.highlight(params[:cl]) if cl
    %td
      #eo-selected
        = render 'll_icon', pos: @eo_selected, add_class: 'selected'
      #eo-picker
        %h4 Edge orientation (EO)
        %table.icon-grid-h
          - @eo_rows.each do |eo_row|
            %tr
              - eo_row.each do |eo|
                %td.icon-grid-h
                  = render 'll_icon', pos: eo, add_class: eo.highlight(params[:eo]) if eo
    %td
      #ep-selected
        = render 'll_icon', pos: @ep_selected, add_class: 'selected'
      #ep-picker
        %h4 Edge position (EP)
        %table.icon-grid-h
          - @ep_rows.each do |ep_row|
            %tr
              - ep_row.each do |ep|
                %td.icon-grid-h
                  = render 'll_icon', pos: ep, add_class: ep.highlight(params[:ep]) if ep
    %td
      #oll-selected
        = render 'll_icon', pos: @oll_selected, add_class: 'selected'
      #oll-picker
        %h4 Corner and edge orientation (OLL)
        %table.icon-grid-h
          - @oll_rows.each do |oll_row|
            %tr
              - oll_row.each do |oll|
                %td.icon-grid-h
                  = render 'll_icon', pos: oll, add_class: oll.highlight(params[:ol]) if oll

%br{clear: 'both'}


%h5{style: 'position: absolute; top:0; right:0; '}
  = link_to "H codes", "http://www.ai.univ-paris8.fr/~bh/cube/solutions_tout.html"

=form_tag url_for(controller: "positions", action: "index"), method: 'get', class: "search_form" do
  =hidden_field_tag(:ol, @db_query['oll'])
  =hidden_field_tag(:cl, @db_query['corner_look'])
  =hidden_field_tag(:eo, @db_query['edge_orientations'])
  =hidden_field_tag(:ep, @db_query['edge_positions'])
  %div
    =label_tag(:cp, "Swapped corners")
    =select_tag(:cp, options_for_select(["None", "Adjacent", "Diagonal"], @cp_param), include_blank: true)
  %div
    =label_tag(:co, "Oriented corners")
    =select_tag(:co, options_for_select(["0", "1", "2", "4"], @db_query['oriented_corners']), include_blank: true)
  -#%div
  -#  =label_tag(:eo, "Oriented edges")
  -#  =select_tag(:eo, options_for_select(["0", "2", "4"], @query['oriented_edges']), include_blank: true)
  %div
    =label_tag(:im, "Show Mirrors")
    =select_tag(:im, options_for_select(["No", "Yes"], @show_mirrors))
  %div
    =submit_tag("Reload")


%h5 Showing #{@positions.count} of all #{Position.count} positions. #{ComboAlg.count(:position_id)} solutions total
%h5 Average best solve: #{@average}

%table.index
  %th LL_CODE
  %th Mirror
  %th CL
  %th OLL
  %th CP
  %th CO
  %th EO
  %th EP
  %th Wt
  %th Solutions
  %th Best Solution
  %th Moves
  %th Name

  - @positions.each do |pos|
    - best = pos.best_alg || OpenStruct.new
    %tr
      %td= link_to pos.ll_code, "positions/#{pos.ll_code}"
      %td= link_to pos.mirror_ll_code, "positions/#{pos.mirror_ll_code}" if pos.ll_code != pos.mirror_ll_code
      %td= pos.corner_look
      %td= pos.oll
      %td= pos.corner_swap_symbol
      %td= pos.oriented_corners
      %td= pos.eo_code
      %td= pos.ep_code
      %td= pos.weight > 1 ? "Ã—#{pos.weight}" : ""
      %td.num= pos.alg_count
      %td
        =best.mv_start
        %span.cancel1= best.mv_cancel1
        %span.merged=  best.mv_merged
        %span.cancel2= best.mv_cancel2
        %span.alg2=    best.mv_end
      %td.num= best.length
      %td{:class => best.oneAlg? ? 'one-alg' : ''}= best.name

:javascript
  $(".ll-icon").on("click", function() {
    $($(this).data('hidden-field-selector')).val($(this).data('code'));
    $('form').submit();
  });

  $("#oll-picker").hide();
  $("#oll-selected").on("mouseover", function() {
    $("#oll-picker").show();
    $("#oll-selected").hide();
  });
  $("#oll-picker").on("mouseleave", function() {
    $("#oll-picker").hide();
    $("#oll-selected").show();
  });

  $("#cop-picker").hide();
  $("#cop-selected").on("mouseover", function() {
    $("#cop-picker").show();
    $("#cop-selected").hide();
  });
  $("#cop-picker").on("mouseleave", function() {
    $("#cop-picker").hide();
    $("#cop-selected").show();
  });

  $("#eo-picker").hide();
  $("#eo-selected").on("mouseover", function() {
    $("#eo-picker").show();
    $("#eo-selected").hide();
  });
  $("#eo-picker").on("mouseleave", function() {
    $("#eo-picker").hide();
    $("#eo-selected").show();
  });

  $("#ep-picker").hide();
  $("#ep-selected").on("mouseover", function() {
    $("#ep-picker").show();
    $("#ep-selected").hide();
  });
  $("#ep-picker").on("mouseleave", function() {
    $("#ep-picker").hide();
    $("#ep-selected").show();
  });