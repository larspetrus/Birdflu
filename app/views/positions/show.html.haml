.leftmenu= link_to 'Search page', root_url
- if @position.has_mirror
  .leftmenu= link_to "Mirror Position", "#{@position.mirror_ll_code}"

.right= render 'll_icon', pos: OllIcons.by_code(@position.oll), add_class: ''
.right= render 'll_icon', pos: EoIcons.by_code(@position.edge_orientations), add_class: ''
.right= render 'll_icon', pos: EpIcons.by_code(@position.edge_positions), add_class: ''
.right= render 'll_icon', pos: CopIcons.by_code(@position.corner_look), add_class: ''

%br{clear: 'both'}

.right= render 'svg_cube', iconf: OllIcons.by_code(@position.oll), size: 88
.right= render 'svg_cube', iconf: EoIcons.by_code(@position.edge_orientations), size: 88
.right= render 'svg_cube', iconf: EpIcons.by_code(@position.edge_positions), size: 88
.right= render 'svg_cube', iconf: CopIcons.by_code(@position.corner_look), size: 88

%br{clear: 'both'}

%h3 Position #{@position.ll_code}

%div.u-position-pic
  %div{class: "arr_#{@position.corner_swap}"}

  %table
    %tr
      %td.none
      %td.b{class: @cube.css(:ULB,:B)}
      %td.b{class: @cube.css(:UB, :B)}
      %td.b{class: @cube.css(:UBR,:B)}
      %td.none
    %tr
      %td.l{class: @cube.css(:ULB,:L)}
      %td.u{class: @cube.css(:ULB,:U)}
      %td.u{class: @cube.css(:UB, :U)}
      %td.u{class: @cube.css(:UBR,:U)}
      %td.r{class: @cube.css(:UBR,:R)}
    %tr
      %td.l{class: @cube.css(:UL, :L)}
      %td.u{class: @cube.css(:UL, :U)}
      %td.u.u-color
      %td.u{class: @cube.css(:UR, :U)}
      %td.r{class: @cube.css(:UR, :R)}
    %tr
      %td.l{class: @cube.css(:UFL,:L)}
      %td.u{class: @cube.css(:UFL,:U)}
      %td.u{class: @cube.css(:UF, :U)}
      %td.u{class: @cube.css(:URF,:U)}
      %td.r{class: @cube.css(:URF,:R)}
    %tr
      %td.none
      %td.f{class: @cube.css(:UFL,:F)}
      %td.f{class: @cube.css(:UF, :F)}
      %td.f{class: @cube.css(:URF,:F)}
      %td.none

- @top_3.each do |t3|
  .roofpig.rp160{:'data-config' => "base=AD | alg=#{t3.moves} | flags=showalg #{t3.setup_moves}" }
    =t3.name

%hr{style: 'clear:both;'}

- dupes = Set.new
%table.index
  %th Moves
  %th Name
  %th Alg
  %th Composition
  - @position.combo_algs.each do |alg|
    %tr
      %td= alg.length unless dupes.include? alg.moves
      %td{class: alg.oneAlg? ? 'one-alg' : ''}= alg.name
      %td{class: @top_3.include?(alg) ? 'top3' : ''}= alg.moves unless dupes.include? alg.moves
      %td
        = alg.mv_start
        %span.cancel1= alg.mv_cancel1
        %span.merged=  alg.mv_merged
        %span.cancel2= alg.mv_cancel2
        %span.alg2=    alg.mv_end
    - dupes << alg.moves


%script{src: "http://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"}
%script ROOFPIG_CONF_AD = "solved=U-| hover=3"
