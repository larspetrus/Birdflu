
%form#niss-form{"accept-charset" => "UTF-8", action:"/fmc", method:"get"}
  %label{for: "niss"} Solution:
  %input#niss{name:"niss", size:72, type:"text", value: @niss_code}/
  %label{for: "scramble"} Scramble:
  %input#scramble{name:"scramble", size:52, type:"text", value: @scramble}/
  %input#show-niss-btn{name:"commit", type:"submit", value:"Show"}/

%div{style: "height: 22px;"}

- if @scramble.present?
  .roofpig.sanity{data: {config: "base=NS | setupmoves=#{@scramble} #{@solution}"} }
    scramble + solution check

- if @example
  %div{style: "display: flex; justify-content: center;"}
    .intro
      %p The Nissualizer makes NISS solutions easy to follow without a ton of manual cube turning. Here is a sample solution to demonstrate. Enter a solution and (optionally) scramble above.
      %p It needs more work. Let me know ideas and bugs (niss@lar5.com).

%h1 The Nissualizer #{(@example ? ' example' :'')}

- if @niss_code.present?
  %table.nissolutions
    %tr
      %td Scramble:
      %td #{@scramble.present? ? @scramble : '(not given)'}
    %tr
      %td Solution steps:
      %td #{@niss_code}
    %tr
      %td Which means:
      %td #{@solution_parts.join(' + ')}  (#{Algs.length(@solution_parts.join(' '))} HTM)
    %tr
      %td Cancels to:
      %td #{@solution}  (#{Algs.length(@solution)} HTM)

  .roofpig.rpniss{data: {config: "base=NS | alg=#{@solution}"} }
    Full solution
  .roofpig.rpniss{data: {config: "base=NS | alg=#{Algs.reverse(@solution)} | colors=cube:#bbb"} }
    Reverse solution

  %div{style: "clear: both"}

  - @steps.each_with_index do |step, i|
    .step
      .roofpig.rpniss{data: {config: "base=NS | alg=#{step.moves} | setupmoves=#{step.setup} | colors=cube:#{step.reversed ? '#bbb' : 'black'}"} }
        Segment #{i+1}#{step.reversed ? ' (reversed)' : ''}

:javascript
  var ROOFPIG_CONF_NS = "hover=far | flags=showalg";

  $('input').keydown(function() {
    event.stopPropagation();
  });

  function packify(alg) {
    alg = alg.replace(/ /g, '');
    alg = alg.replace(/R2/g, 'r').replace(/R'/g, 'P').replace(/R/g, 'R');
    alg = alg.replace(/L2/g, 'l').replace(/L'/g, '1').replace(/L/g, 'L');
    alg = alg.replace(/U2/g, 'u').replace(/U'/g, 'n').replace(/U/g, 'U');
    alg = alg.replace(/D2/g, 'd').replace(/D'/g, 'p').replace(/D/g, 'D');
    alg = alg.replace(/F2/g, 'f').replace(/F'/g, 'E').replace(/F/g, 'F');
    alg = alg.replace(/B2/g, 'b').replace(/B'/g, 'q').replace(/B/g, 'B');
    return alg;
  }

  $("#niss-form").submit(function(event) {
    var s = $('#scramble').val();
    var n = $('#niss').val();
    window.location.href = '/fmc?s='+packify(s) + '&n='+packify(n);

    event.preventDefault();
  });
